@use '../setting/setting' as s;

// メディアクエリ
// @mixin pc {
//   @media only screen and (min-width: #{s.$bp-pc}) {
//     @content;
//   }
// }

// @mixin sp {
//   @media only screen and (max-width: #{s.$bp-sp}) {
//     @content;
//   }
// }

/* RWD表示切り替え
---------------------------------------------------------------------------- */
@media all and (min-width: #{s.$breakpoint+1}px) {
  .nopc {
    display: none !important;
  }
}
@media all and (max-width: #{s.$breakpoint}px) {
  .nosp {
    display: none !important;
  }
}

@mixin background(
  $color: transparent,
  $image,
  // 呼び出し側：ulr(../img/)など
  $repeat: no-repeat,
  $position-x: center,
  $position-y: center,
  $size: cover
) {
  background: {
    color: $color;
    image: $image;
    repeat: $repeat;
    position: $position-x $position-y;
    size: $size;
  }
}

@mixin fz($font-size, $line-height: 1, $letter-spacing: 0, $font-weight: 0) {
  //  font-size
  font-size: ($font-size / 10) + rem;
  //  line-height
  @if ($line-height!=0) {
    line-height: $line-height;
  }
  // letter-spacing
  @if ($letter-spacing!=0) {
    letter-spacing: ($letter-spacing / 1000) * 1em;
  }
  // font-weight
  @if ($font-weight!=0) {
    font-weight: ($font-weight);
  }
}

// font-size(vw)
@mixin spfz($fontSizeSp) {
  font-size: ($fontSizeSp / 750 * 100) + vw;
}
// convert from px to vw
@function vw($pixel) {
  $vw-value: $pixel/750 * 100;
  @return #{$vw-value}vw;
}

// Noto Sans JP
@mixin noto($weight) {
  font-family: 'Noto Sans JP';
  font-weight: #{$weight};
}

// flex
@mixin flex($justify: 0, $align: 0, $wrap: 0, $wrap_align: 0) {
  display: flex;

  // justify-content水平方向揃え（第一引数）
  @if $justify == start {
    // 左揃え

    justify-content: flex-start;
  } @else if $justify == end {
    // 右揃え

    justify-content: flex-end;
  } @else if $justify == center {
    // 中央揃え

    justify-content: center;
  } @else if $justify == between {
    // 両端配置

    justify-content: space-between;
  } @else if $justify == around {
    // 均等配置

    justify-content: space-around;
  }

  // align-items垂直方向揃え（第二引数）
  @if $align == start {
    // 上揃え

    align-items: flex-start;
  } @else if $align == end {
    // 下揃え

    align-items: flex-end;
  } @else if $align == center {
    // 中央揃え

    align-items: center;
  } @else if $align == baseline {
    // ベースライン

    align-items: baseline;
  } @else if $align == stretch {
    // 高さ揃え

    align-items: stretch;
  }

  // flex-wrap子要素の折り返し設定（第三引数）
  @if $wrap == nowrap {
    // 折り返ししない

    flex-wrap: nowrap;
  } @else if $wrap == wrap {
    // 上から下

    flex-wrap: wrap;
  } @else if $wrap == reverse {
    // 下から上

    flex-wrap: wrap-reverse;
  }

  // align-content複数行設定（第四引数）
  @if $wrap_align == start {
    // 上揃え

    align-content: flex-start;
  } @else if $wrap_align == end {
    // 下揃え

    align-content: flex-end;
  } @else if $wrap_align == center {
    // 中央揃え

    align-content: center;
  } @else if $wrap_align == between {
    // 両端配置

    align-content: space-between;
  } @else if $wrap_align == around {
    // 均等配置

    align-content: space-around;
  } @else if $wrap_align == stretch {
    // 高さ揃え

    align-content: stretch;
  }
}
